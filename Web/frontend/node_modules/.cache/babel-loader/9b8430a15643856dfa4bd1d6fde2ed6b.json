{"ast":null,"code":"var _jsxFileName = \"/Users/akshayraichur/Projects/College-Projects/SD-Lab/ces-xp-demo/Web/frontend/src/Context/AuthContext.js\";\nimport React, { useState, useEffect } from \"react\";\nexport const AuthContext = React.createContext();\nexport default (({\n  children\n}) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({});\n  useEffect(() => {\n    const storage = localStorage.getItem(token);\n\n    if (!storage) {// Authenticate api call & set localstorage\n    }\n  }, []);\n  return (\n    /*#__PURE__*/\n    //   or can also be used simply with <></>\n    React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(AuthContext.Provider, {\n      value: {\n        user,\n        setUser,\n        isAuthenticated,\n        setIsAuthenticated\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, children))\n  );\n});","map":{"version":3,"sources":["/Users/akshayraichur/Projects/College-Projects/SD-Lab/ces-xp-demo/Web/frontend/src/Context/AuthContext.js"],"names":["React","useState","useEffect","AuthContext","createContext","children","isLoaded","setIsLoaded","isAuthenticated","setIsAuthenticated","user","setUser","storage","localStorage","getItem","token"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAO,MAAMC,WAAW,GAAGH,KAAK,CAACI,aAAN,EAApB;AAEP,gBAAe,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC/B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqBC,KAArB,CAAhB;;AACA,QAAI,CAACH,OAAL,EAAc,CACZ;AACD;AACF,GALQ,EAKN,EALM,CAAT;AAOA;AAAA;AACE;AACA,wBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD,CAAa,QAAb;AACE,MAAA,KAAK,EAAE;AAAEF,QAAAA,IAAF;AAAQC,QAAAA,OAAR;AAAiBH,QAAAA,eAAjB;AAAkCC,QAAAA;AAAlC,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGJ,QAHH,CADF;AAFF;AAUD,CAtBD","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport const AuthContext = React.createContext();\n\nexport default ({ children }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    const storage = localStorage.getItem(token);\n    if (!storage) {\n      // Authenticate api call & set localstorage\n    }\n  }, []);\n\n  return (\n    //   or can also be used simply with <></>\n    <React.Fragment>\n      <AuthContext.Provider\n        value={{ user, setUser, isAuthenticated, setIsAuthenticated }}\n      >\n        {children}\n      </AuthContext.Provider>\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}