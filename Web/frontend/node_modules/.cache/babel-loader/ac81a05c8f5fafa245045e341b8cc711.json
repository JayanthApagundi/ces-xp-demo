{"ast":null,"code":"var _jsxFileName = \"/Users/akshayraichur/Projects/College-Projects/SD-Lab/ces-xp-demo/Web/frontend/src/Screens/Register/Register.jsx\";\nimport React from \"react\";\nimport { Container, Grid, Typography, TextField, Button } from \"@material-ui/core\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }\n  }));\n}\n\nconst Message = props => {\n  return /*#__PURE__*/React.createElement(Snackbar, {\n    open: true,\n    autoHideDuration: 6000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, props.message));\n};\n\nexport const Register = () => {\n  const validationSchema = () => {\n    return Yup.object({\n      name: Yup.string().min(3, \"You cant have a name with only 2 chars\").trim().required(\"Name Field is required!\"),\n      email: Yup.string().email(\"This is not a email\"),\n      address: Yup.string().required(\"Address field is required\"),\n      phoneNumber: Yup.number().min(9, \"Thats not a number!\").max(10, \"Thats not a number!\")\n    });\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      address: \"\",\n      password: \"\",\n      phoneNumber: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      console.log(values);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: \"d-flex justify-content-center my-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      alignItems: \"center\",\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddCircleIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  })), \" \", /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    component: \"h4\",\n    className: \"pl-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Register!\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    label: \"Name\",\n    required: true,\n    name: \"name\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    label: \"email\",\n    required: true,\n    name: \"email\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    label: \"Address\",\n    required: true,\n    name: \"address\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    type: \"password\",\n    label: \"password\",\n    required: true,\n    name: \"password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    label: \"Phone Number\",\n    required: true,\n    name: \"phoneNumber\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.phoneNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, \"Choose the best photo you have :\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, \"Register!\")))))));\n};","map":{"version":3,"sources":["/Users/akshayraichur/Projects/College-Projects/SD-Lab/ces-xp-demo/Web/frontend/src/Screens/Register/Register.jsx"],"names":["React","Container","Grid","Typography","TextField","Button","AddCircleIcon","useFormik","Yup","Snackbar","MuiAlert","makeStyles","Alert","props","Message","message","Register","validationSchema","object","name","string","min","trim","required","email","address","phoneNumber","number","max","formik","initialValues","password","onSubmit","values","console","log","alignItems","display","handleSubmit","handleChange","handleBlur"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Container,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Message = (props) => {\n  return <Snackbar open={true} autoHideDuration={6000}>\n    <Alert severity=\"success\">\n      {props.message}\n    </Alert>\n  </Snackbar>;\n};\n\nexport const Register = () => {\n  const validationSchema = () => {\n    return Yup.object({\n      name: Yup.string().min(3, \"You cant have a name with only 2 chars\").trim()\n        .required(\"Name Field is required!\"),\n      email: Yup.string().email(\"This is not a email\"),\n      address: Yup.string().required(\"Address field is required\"),\n      phoneNumber: Yup.number().min(9, \"Thats not a number!\").max(\n        10,\n        \"Thats not a number!\",\n      ),\n    });\n  };\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      address: \"\",\n      password: \"\",\n      phoneNumber: \"\",\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n      console.log(values);\n    },\n  });\n  return (\n    <div>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <Grid container spacing={2}>\n          <Grid item xs={12} className=\"d-flex justify-content-center my-5\">\n            <div style={{ alignItems: \"center\", display: \"flex\" }}>\n              <AddCircleIcon />\n            </div>\n            {\" \"}\n            <Typography variant=\"h4\" component=\"h4\" className=\"pl-2\">\n              Register!\n            </Typography>\n          </Grid>\n\n          <form onSubmit={formik.handleSubmit} noValidate>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  label=\"Name\"\n                  required\n                  name=\"name\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.name}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  label=\"email\"\n                  required\n                  name=\"email\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.email}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  label=\"Address\"\n                  required\n                  name=\"address\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.address}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  type=\"password\"\n                  label=\"password\"\n                  required\n                  name=\"password\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.password}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  label=\"Phone Number\"\n                  required\n                  name=\"phoneNumber\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.phoneNumber}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Typography>Choose the best photo you have :</Typography>\n                <input type=\"file\" />\n              </Grid>\n              <Grid item xs={12} className=\"d-flex justify-content-center\">\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\n                  Register!\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}