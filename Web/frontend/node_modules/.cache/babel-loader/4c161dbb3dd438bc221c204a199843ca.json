{"ast":null,"code":"var _jsxFileName = \"/Users/akshayraichur/Projects/College-Projects/SD-Lab/ces-xp-demo/Web/frontend/src/Context/AuthContext.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport { Authenticate } from \"../Helpers/Auth\";\nexport const AuthContext = React.createContext();\nexport default (({\n  children\n}) => {\n  const [isLoaded, setIsLoaded] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({});\n  const history = useHistory();\n  useEffect(() => {\n    const storage = localStorage.getItem(\"access_token\");\n    const user = localStorage.getItem(\"user\");\n\n    if (!storage && !user) {\n      history.push(\"/signin\");\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/signin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 14\n        }\n      });\n    } else {\n      setIsAuthenticated(true);\n    }\n  }, []);\n  return (\n    /*#__PURE__*/\n    //   or can also be used simply with <></Redirect>\n    React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }\n    }, isLoaded ? /*#__PURE__*/React.createElement(AuthContext.Provider, {\n      value: {\n        user,\n        setUser,\n        isAuthenticated,\n        setIsAuthenticated\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, children) : /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, \"Loading.....\"))\n  );\n});","map":{"version":3,"sources":["/Users/akshayraichur/Projects/College-Projects/SD-Lab/ces-xp-demo/Web/frontend/src/Context/AuthContext.js"],"names":["React","useState","useEffect","useHistory","Redirect","Authenticate","AuthContext","createContext","children","isLoaded","setIsLoaded","isAuthenticated","setIsAuthenticated","user","setUser","history","storage","localStorage","getItem","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,kBAArC;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,OAAO,MAAMC,WAAW,GAAGN,KAAK,CAACO,aAAN,EAApB;AAEP,gBAAe,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC/B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACU,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMc,OAAO,GAAGZ,UAAU,EAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAhB;AACA,UAAML,IAAI,GAAGI,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;;AAEA,QAAI,CAACF,OAAD,IAAY,CAACH,IAAjB,EAAuB;AACrBE,MAAAA,OAAO,CAACI,IAAR,CAAa,SAAb;AACA,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAHD,MAGO;AACLP,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;AACF,GAVQ,EAUN,EAVM,CAAT;AAYA;AAAA;AACE;AACA,wBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,QAAQ,gBAEL,oBAAC,WAAD,CAAa,QAAb;AACE,MAAA,KAAK,EAAE;AAAEI,QAAAA,IAAF;AAAQC,QAAAA,OAAR;AAAiBH,QAAAA,eAAjB;AAAkCC,QAAAA;AAAlC,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGJ,QAHH,CAFK,gBASL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVN;AAFF;AAgBD,CAlCD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport { Authenticate } from \"../Helpers/Auth\";\n\nexport const AuthContext = React.createContext();\n\nexport default ({ children }) => {\n  const [isLoaded, setIsLoaded] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({});\n  const history = useHistory();\n\n  useEffect(() => {\n    const storage = localStorage.getItem(\"access_token\");\n    const user = localStorage.getItem(\"user\");\n\n    if (!storage && !user) {\n      history.push(\"/signin\");\n      return <Redirect to=\"/signin\" />;\n    } else {\n      setIsAuthenticated(true);\n    }\n  }, []);\n\n  return (\n    //   or can also be used simply with <></Redirect>\n    <React.Fragment>\n      {isLoaded\n        ? (\n          <AuthContext.Provider\n            value={{ user, setUser, isAuthenticated, setIsAuthenticated }}\n          >\n            {children}\n          </AuthContext.Provider>\n        )\n        : (\n          <h1>Loading.....</h1>\n        )}\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}