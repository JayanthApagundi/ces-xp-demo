{"ast":null,"code":"var _jsxFileName = \"/Users/akshayraichur/Projects/College-Projects/SD-Lab/ces-xp-demo/Web/frontend/src/Screens/Register/Register.jsx\";\nimport React from \"react\";\nimport { Container, Grid, Typography, TextField, Button } from \"@material-ui/core\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }\n  }));\n}\n\nconst Message = props => {\n  return /*#__PURE__*/React.createElement(Snackbar, {\n    open: true,\n    autoHideDuration: 6000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: props.severity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, props.message));\n};\n\nexport const Register = () => {\n  const validationSchema = () => {\n    return Yup.object({\n      name: Yup.string().min(3, \"You cant have a name with only 2 chars\").trim().required(\"Name Field is required!\")\n    });\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      address: \"\",\n      password: \"\",\n      phoneNumber: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      console.log(values);\n    }\n  });\n\n  const FormContents = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: \"d-flex justify-content-center my-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        alignItems: \"center\",\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AddCircleIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    })), \" \", /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      component: \"h4\",\n      className: \"pl-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"Register!\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, formik.errors.name && formik.touched.name ? /*#__PURE__*/React.createElement(Message, {\n      message: formik.errors.name,\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }) : null, formik.errors.email && formik.touched.email ? /*#__PURE__*/React.createElement(Message, {\n      message: formik.errors.email,\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }) : null, formik.errors.address && formik.touched.address ? /*#__PURE__*/React.createElement(Message, {\n      message: formik.errors.address,\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }) : null, formik.errors.password && formik.touched.password ? /*#__PURE__*/React.createElement(Message, {\n      message: formik.errors.password,\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }) : null, formik.errors.phoneNumber && formik.touched.phoneNumber ? /*#__PURE__*/React.createElement(Message, {\n      message: formik.errors.phoneNumber,\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }) : null), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: formik.handleSubmit,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      label: \"Name\",\n      required: true,\n      name: \"name\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      label: \"email\",\n      required: true,\n      name: \"email\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      label: \"Address\",\n      required: true,\n      name: \"address\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      type: \"password\",\n      label: \"password\",\n      required: true,\n      name: \"password\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      required: true,\n      name: \"phoneNumber\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.phoneNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, \"Choose the best photo you have :\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: \"d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, \"Register!\")))))));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, FormContents());\n};","map":{"version":3,"sources":["/Users/akshayraichur/Projects/College-Projects/SD-Lab/ces-xp-demo/Web/frontend/src/Screens/Register/Register.jsx"],"names":["React","Container","Grid","Typography","TextField","Button","AddCircleIcon","useFormik","Yup","Snackbar","MuiAlert","Alert","props","Message","severity","message","Register","validationSchema","object","name","string","min","trim","required","formik","initialValues","email","address","password","phoneNumber","onSubmit","values","console","log","FormContents","alignItems","display","errors","touched","handleSubmit","handleChange","handleBlur"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,IAFF,EAGEC,UAHF,EAIEC,SAJF,EAKEC,MALF,QAMO,mBANP;AAOA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,sBAAO,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC;AAAhC,KAA6CA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;AAED,MAAMC,OAAO,GAAID,KAAD,IAAW;AACzB,sBAAO,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAE,IAAhB;AAAsB,IAAA,gBAAgB,EAAE,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACL,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAEA,KAAK,CAACE,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACG,OADT,CADK,CAAP;AAKD,CAND;;AAQA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5B,QAAMC,gBAAgB,GAAG,MAAM;AAC7B,WAAOT,GAAG,CAACU,MAAJ,CAAW;AAChBC,MAAAA,IAAI,EAAEX,GAAG,CAACY,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoB,wCAApB,EAA8DC,IAA9D,GACHC,QADG,CACM,yBADN;AADU,KAAX,CAAP;AAID,GALD;;AAMA,QAAMC,MAAM,GAAGjB,SAAS,CAAC;AACvBkB,IAAAA,aAAa,EAAE;AACbN,MAAAA,IAAI,EAAE,EADO;AAEbO,MAAAA,KAAK,EAAE,EAFM;AAGbC,MAAAA,OAAO,EAAE,EAHI;AAIbC,MAAAA,QAAQ,EAAE,EAJG;AAKbC,MAAAA,WAAW,EAAE;AALA,KADQ;AAQvBZ,IAAAA,gBAAgB,EAAEA,gBARK;AASvBa,IAAAA,QAAQ,EAAGC,MAAD,IAAY;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD;AAXsB,GAAD,CAAxB;;AAcA,QAAMG,YAAY,GAAG,MAAM;AACzB,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACN,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAA4B,MAAA,QAAQ,EAAC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,SAAS,EAAC,oCAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE,QAAd;AAAwBC,QAAAA,OAAO,EAAE;AAAjC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIG,GAJH,eAKE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,SAAS,EAAC,IAAnC;AAAwC,MAAA,SAAS,EAAC,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,CADF,eAWE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGZ,MAAM,CAACa,MAAP,CAAclB,IAAd,IAAsBK,MAAM,CAACc,OAAP,CAAenB,IAArC,gBACG,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAEK,MAAM,CAACa,MAAP,CAAclB,IAAhC;AAAsC,MAAA,QAAQ,EAAC,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAEG,IAHN,EAKGK,MAAM,CAACa,MAAP,CAAcX,KAAd,IAAuBF,MAAM,CAACc,OAAP,CAAeZ,KAAtC,gBACG,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAEF,MAAM,CAACa,MAAP,CAAcX,KAAhC;AAAuC,MAAA,QAAQ,EAAC,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAEG,IAPN,EASGF,MAAM,CAACa,MAAP,CAAcV,OAAd,IAAyBH,MAAM,CAACc,OAAP,CAAeX,OAAxC,gBACG,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAEH,MAAM,CAACa,MAAP,CAAcV,OAAhC;AAAyC,MAAA,QAAQ,EAAC,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAEG,IAXN,EAaGH,MAAM,CAACa,MAAP,CAAcT,QAAd,IAA0BJ,MAAM,CAACc,OAAP,CAAeV,QAAzC,gBACG,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAEJ,MAAM,CAACa,MAAP,CAAcT,QAAhC;AAA0C,MAAA,QAAQ,EAAC,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAEG,IAfN,EAiBGJ,MAAM,CAACa,MAAP,CAAcR,WAAd,IAA6BL,MAAM,CAACc,OAAP,CAAeT,WAA5C,gBACG,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAEL,MAAM,CAACa,MAAP,CAAcR,WAAhC;AAA6C,MAAA,QAAQ,EAAC,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAEG,IAnBN,CAXF,eAiCE;AAAM,MAAA,QAAQ,EAAEL,MAAM,CAACe,YAAvB;AAAqC,MAAA,UAAU,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,IAAI,EAAC,MALP;AAME,MAAA,QAAQ,EAAEf,MAAM,CAACgB,YANnB;AAOE,MAAA,MAAM,EAAEhB,MAAM,CAACiB,UAPjB;AAQE,MAAA,KAAK,EAAEjB,MAAM,CAACO,MAAP,CAAcZ,IARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAaE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,IAAI,EAAC,OALP;AAME,MAAA,QAAQ,EAAEK,MAAM,CAACgB,YANnB;AAOE,MAAA,MAAM,EAAEhB,MAAM,CAACiB,UAPjB;AAQE,MAAA,KAAK,EAAEjB,MAAM,CAACO,MAAP,CAAcL,KARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAbF,eA0BE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,IAAI,EAAC,SALP;AAME,MAAA,QAAQ,EAAEF,MAAM,CAACgB,YANnB;AAOE,MAAA,MAAM,EAAEhB,MAAM,CAACiB,UAPjB;AAQE,MAAA,KAAK,EAAEjB,MAAM,CAACO,MAAP,CAAcJ,OARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA1BF,eAuCE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,KAAK,EAAC,UAJR;AAKE,MAAA,QAAQ,MALV;AAME,MAAA,IAAI,EAAC,UANP;AAOE,MAAA,QAAQ,EAAEH,MAAM,CAACgB,YAPnB;AAQE,MAAA,MAAM,EAAEhB,MAAM,CAACiB,UARjB;AASE,MAAA,KAAK,EAAEjB,MAAM,CAACO,MAAP,CAAcH,QATvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAvCF,eAqDE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,KAAK,EAAC,cAHR;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,IAAI,EAAC,aALP;AAME,MAAA,QAAQ,EAAEJ,MAAM,CAACgB,YANnB;AAOE,MAAA,MAAM,EAAEhB,MAAM,CAACiB,UAPjB;AAQE,MAAA,KAAK,EAAEjB,MAAM,CAACO,MAAP,CAAcF,WARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CArDF,eAiEE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAjEF,eAqEE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,SAAS,EAAC,+BAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,WAAlC;AAA8C,MAAA,IAAI,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CArEF,CADF,CAjCF,CADF,CADM,CAAR;AAmHD,GApHD;;AAsHA,sBAAO,0CAAGK,YAAY,EAAf,CAAP;AACD,CA5IM","sourcesContent":["import React from \"react\";\nimport {\n  Container,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Message = (props) => {\n  return <Snackbar open={true} autoHideDuration={6000}>\n    <Alert severity={props.severity}>\n      {props.message}\n    </Alert>\n  </Snackbar>;\n};\n\nexport const Register = () => {\n  const validationSchema = () => {\n    return Yup.object({\n      name: Yup.string().min(3, \"You cant have a name with only 2 chars\").trim()\n        .required(\"Name Field is required!\"),\n    });\n  };\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      address: \"\",\n      password: \"\",\n      phoneNumber: \"\",\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n      console.log(values);\n    },\n  });\n\n  const FormContents = () => {\n    return (<div>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <Grid container spacing={2}>\n          <Grid item xs={12} className=\"d-flex justify-content-center my-5\">\n            <div style={{ alignItems: \"center\", display: \"flex\" }}>\n              <AddCircleIcon />\n            </div>\n            {\" \"}\n            <Typography variant=\"h4\" component=\"h4\" className=\"pl-2\">\n              Register!\n            </Typography>\n          </Grid>\n\n          <Grid item xs={12}>\n            {formik.errors.name && formik.touched.name\n              ? <Message message={formik.errors.name} severity=\"error\" />\n              : null}\n\n            {formik.errors.email && formik.touched.email\n              ? <Message message={formik.errors.email} severity=\"error\" />\n              : null}\n\n            {formik.errors.address && formik.touched.address\n              ? <Message message={formik.errors.address} severity=\"error\" />\n              : null}\n\n            {formik.errors.password && formik.touched.password\n              ? <Message message={formik.errors.password} severity=\"error\" />\n              : null}\n\n            {formik.errors.phoneNumber && formik.touched.phoneNumber\n              ? <Message message={formik.errors.phoneNumber} severity=\"error\" />\n              : null}\n          </Grid>\n\n          <form onSubmit={formik.handleSubmit} noValidate>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  label=\"Name\"\n                  required\n                  name=\"name\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.name}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  label=\"email\"\n                  required\n                  name=\"email\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.email}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  label=\"Address\"\n                  required\n                  name=\"address\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.address}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  type=\"password\"\n                  label=\"password\"\n                  required\n                  name=\"password\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.password}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  label=\"Phone Number\"\n                  required\n                  name=\"phoneNumber\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.phoneNumber}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Typography>Choose the best photo you have :</Typography>\n                <input type=\"file\" />\n              </Grid>\n              <Grid item xs={12} className=\"d-flex justify-content-center\">\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\n                  Register!\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Grid>\n      </Container>\n    </div>);\n  };\n\n  return <>{FormContents()}</>;\n};\n"]},"metadata":{},"sourceType":"module"}