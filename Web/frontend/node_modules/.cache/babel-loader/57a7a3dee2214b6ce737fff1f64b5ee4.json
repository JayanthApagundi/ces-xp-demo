{"ast":null,"code":"var _jsxFileName = \"/Users/akshayraichur/Projects/College-Projects/SD-Lab/ces-xp-demo/Web/frontend/src/Context/AuthContext.js\";\nimport React, { useState, useEffect } from \"react\";\nexport const AuthContext = React.createContext();\nexport default (({\n  children\n}) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({});\n  useEffect(() => {\n    if (localStorage.getItem(\"access_token\") && localStorage.getItem(\"user\")) {\n      // eslint-disable-next-line\n      const userStorage = JSON.parse(localStorage.getItem(\"user\"));\n      console.log(typeof userStorage);\n      setIsAuthenticated(true);\n      setUser(userStorage);\n      setIsLoaded(true);\n    } else {\n      setIsAuthenticated(false);\n      setUser({});\n      setIsLoaded(true);\n    }\n  }, []);\n  return (\n    /*#__PURE__*/\n    //   or can also be used simply with <></Redirect>\n    React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }\n    }, isLoaded ? /*#__PURE__*/React.createElement(AuthContext.Provider, {\n      value: {\n        user,\n        setUser,\n        isAuthenticated,\n        setIsAuthenticated\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, children) : /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, \"Loading.....\"))\n  );\n});","map":{"version":3,"sources":["/Users/akshayraichur/Projects/College-Projects/SD-Lab/ces-xp-demo/Web/frontend/src/Context/AuthContext.js"],"names":["React","useState","useEffect","AuthContext","createContext","children","isLoaded","setIsLoaded","isAuthenticated","setIsAuthenticated","user","setUser","localStorage","getItem","userStorage","JSON","parse","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAO,MAAMC,WAAW,GAAGH,KAAK,CAACI,aAAN,EAApB;AAEP,gBAAe,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC/B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,YAAY,CAACC,OAAb,CAAqB,cAArB,KAAwCD,YAAY,CAACC,OAAb,CAAqB,MAArB,CAA5C,EAA0E;AACxE;AACA,YAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAApB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAOJ,WAAnB;AACAL,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAE,MAAAA,OAAO,CAACG,WAAD,CAAP;AACAP,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAPD,MAOO;AACLE,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAE,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAJ,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,GAbQ,EAaN,EAbM,CAAT;AAeA;AAAA;AACE;AACA,wBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,QAAQ,gBAEL,oBAAC,WAAD,CAAa,QAAb;AACE,MAAA,KAAK,EAAE;AAAEI,QAAAA,IAAF;AAAQC,QAAAA,OAAR;AAAiBH,QAAAA,eAAjB;AAAkCC,QAAAA;AAAlC,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGJ,QAHH,CAFK,gBASL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVN;AAFF;AAgBD,CApCD","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport const AuthContext = React.createContext();\n\nexport default ({ children }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    if (localStorage.getItem(\"access_token\") && localStorage.getItem(\"user\")) {\n      // eslint-disable-next-line\n      const userStorage = JSON.parse(localStorage.getItem(\"user\"));\n      console.log(typeof userStorage);\n      setIsAuthenticated(true);\n      setUser(userStorage);\n      setIsLoaded(true);\n    } else {\n      setIsAuthenticated(false);\n      setUser({});\n      setIsLoaded(true);\n    }\n  }, []);\n\n  return (\n    //   or can also be used simply with <></Redirect>\n    <React.Fragment>\n      {isLoaded\n        ? (\n          <AuthContext.Provider\n            value={{ user, setUser, isAuthenticated, setIsAuthenticated }}\n          >\n            {children}\n          </AuthContext.Provider>\n        )\n        : (\n          <h1>Loading.....</h1>\n        )}\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}