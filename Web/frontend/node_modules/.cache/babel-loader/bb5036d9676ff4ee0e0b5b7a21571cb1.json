{"ast":null,"code":"var _jsxFileName = \"/Users/akshayraichur/Projects/College-Projects/SD-Lab/ces-xp-demo/Web/frontend/src/Screens/Conferences/Conferences.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { getConf } from \"../../Helpers/Conf\";\nimport Card from \"../../Components/Card\";\nexport const Conferences = () => {\n  const [conf, setConf] = useState([]);\n  const [error, setError] = useState([]);\n  useEffect(() => {\n    getConf().then(data => {\n      if (data.err) {\n        setError(data.err);\n      } else {\n        setConf(data.conferences);\n      }\n    }).catch();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Conferences\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, conf.map((c, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4 my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    name: c.name,\n    description: c.description,\n    price: c.price,\n    date: c.dateOfWorkshop,\n    id: c._id,\n    image: c.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  })))))));\n};","map":{"version":3,"sources":["/Users/akshayraichur/Projects/College-Projects/SD-Lab/ces-xp-demo/Web/frontend/src/Screens/Conferences/Conferences.jsx"],"names":["React","useState","useEffect","getConf","Card","Conferences","conf","setConf","error","setError","then","data","err","conferences","catch","map","c","index","name","description","price","dateOfWorkshop","_id","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,OAAO,GAAGO,IAAV,CAAgBC,IAAD,IAAU;AACvB,UAAIA,IAAI,CAACC,GAAT,EAAc;AACZH,QAAAA,QAAQ,CAACE,IAAI,CAACC,GAAN,CAAR;AACD,OAFD,MAEO;AACLL,QAAAA,OAAO,CAACI,IAAI,CAACE,WAAN,CAAP;AACD;AACF,KAND,EAMGC,KANH;AAOD,GARQ,EAQN,EARM,CAAT;AASA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,IAAI,CAACS,GAAL,CAAS,CAACC,CAAD,EAAIC,KAAJ,kBACP,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,GAAG,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAED,CAAC,CAACE,IADV;AAEE,IAAA,WAAW,EAAEF,CAAC,CAACG,WAFjB;AAGE,IAAA,KAAK,EAAEH,CAAC,CAACI,KAHX;AAIE,IAAA,IAAI,EAAEJ,CAAC,CAACK,cAJV;AAKE,IAAA,EAAE,EAAEL,CAAC,CAACM,GALR;AAME,IAAA,KAAK,EAAEN,CAAC,CAACO,KANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADF,CADH,CAFF,CADF,CADF;AAuBD,CAnCM","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getConf } from \"../../Helpers/Conf\";\nimport Card from \"../../Components/Card\";\n\nexport const Conferences = () => {\n  const [conf, setConf] = useState([]);\n  const [error, setError] = useState([]);\n  useEffect(() => {\n    getConf().then((data) => {\n      if (data.err) {\n        setError(data.err);\n      } else {\n        setConf(data.conferences);\n      }\n    }).catch();\n  }, []);\n  return (\n    <div>\n      <div className=\"container\">\n        <h1>Conferences</h1>\n        <div className=\"row\">\n          {conf.map((c, index) => (\n            (<React.Fragment key={index}>\n              <div className=\"col-md-4 my-3\">\n                <Card\n                  name={c.name}\n                  description={c.description}\n                  price={c.price}\n                  date={c.dateOfWorkshop}\n                  id={c._id}\n                  image={c.image}\n                />\n              </div>\n            </React.Fragment>)\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}