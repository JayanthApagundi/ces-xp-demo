{"ast":null,"code":"var _jsxFileName = \"/Users/akshayraichur/Projects/College-Projects/SD-Lab/ces-xp-demo/Web/frontend/src/Screens/Signin/Signin.jsx\";\nimport React, { useContext } from \"react\";\nimport { Container, Grid, Typography, TextField, Button } from \"@material-ui/core\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { signin } from \"../../Helpers/Auth\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../Context/AuthContext\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }\n  }));\n}\n\nconst Message = props => {\n  return /*#__PURE__*/React.createElement(Snackbar, {\n    open: true,\n    autoHideDuration: 6000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: props.severity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, props.message));\n};\n\nconst validationSchema = () => {\n  return Yup.object({\n    email: Yup.string().required(\"Email is required\").email(\"Please enter your email correctly\"),\n    password: Yup.string().min(3, \"Minimum of 3 Characters is required\").required(\"Dont skip your password\")\n  });\n};\n\nexport const Signin = () => {\n  const history = useHistory();\n  const [success, setSuccess] = React.useState(false);\n  const [err, setErr] = React.useState(null);\n  const {\n    setUser,\n    setAuthenticated\n  } = useContext(AuthContext);\n\n  const onSubmit = values => {\n    console.log(values);\n    const formData = new FormData();\n    formData.append(\"email\", values.email);\n    formData.append(\"password\", values.password);\n    signin(formData).then(data => {\n      if (data.err) {\n        setErr(data.err);\n      } else {\n        // Set Auth and user to context\n        setSuccess(true);\n        history.push(\"/\");\n      }\n    }).catch();\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: onSubmit\n  });\n\n  const FormContents = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: \"d-flex justify-content-center my-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      component: \"h4\",\n      className: \"pl-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, \"Signin\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, formik.errors.email && formik.touched.email ? /*#__PURE__*/React.createElement(Message, {\n      message: formik.errors.email,\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }) : null, formik.errors.password && formik.touched.password ? /*#__PURE__*/React.createElement(Message, {\n      message: formik.errors.password,\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }) : null), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: formik.handleSubmit,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      label: \"email\",\n      required: true,\n      name: \"email\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      type: \"password\",\n      label: \"password\",\n      required: true,\n      name: \"password\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: \"d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    }, \"Take me in!\")))))));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, FormContents());\n};","map":{"version":3,"sources":["/Users/akshayraichur/Projects/College-Projects/SD-Lab/ces-xp-demo/Web/frontend/src/Screens/Signin/Signin.jsx"],"names":["React","useContext","Container","Grid","Typography","TextField","Button","useFormik","Yup","Snackbar","MuiAlert","signin","useHistory","AuthContext","Alert","props","Message","severity","message","validationSchema","object","email","string","required","password","min","Signin","history","success","setSuccess","useState","err","setErr","setUser","setAuthenticated","onSubmit","values","console","log","formData","FormData","append","then","data","push","catch","formik","initialValues","FormContents","errors","touched","handleSubmit","handleChange","handleBlur"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport {\n  Container,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { signin } from \"../../Helpers/Auth\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../Context/AuthContext\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Message = (props) => {\n  return (\n    <Snackbar open={true} autoHideDuration={6000}>\n      <Alert severity={props.severity}>{props.message}</Alert>\n    </Snackbar>\n  );\n};\n\nconst validationSchema = () => {\n  return Yup.object({\n    email: Yup.string()\n      .required(\"Email is required\")\n      .email(\"Please enter your email correctly\"),\n    password: Yup.string()\n      .min(3, \"Minimum of 3 Characters is required\")\n      .required(\"Dont skip your password\"),\n  });\n};\n\nexport const Signin = () => {\n  const history = useHistory();\n  const [success, setSuccess] = React.useState(false);\n  const [err, setErr] = React.useState(null);\n\n  const { setUser, setAuthenticated } = useContext(AuthContext);\n\n  const onSubmit = (values) => {\n    console.log(values);\n\n    const formData = new FormData();\n    formData.append(\"email\", values.email);\n    formData.append(\"password\", values.password);\n\n    signin(formData)\n      .then((data) => {\n        if (data.err) {\n          setErr(data.err);\n        } else {\n          // Set Auth and user to context\n          setSuccess(true);\n          history.push(\"/\");\n        }\n      })\n      .catch();\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n  });\n\n  const FormContents = () => {\n    return (\n      <div>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <Grid container spacing={2}>\n            <Grid item xs={12} className=\"d-flex justify-content-center my-5\">\n              <Typography variant=\"h4\" component=\"h4\" className=\"pl-2\">\n                Signin\n              </Typography>\n            </Grid>\n\n            <Grid item xs={12}>\n              {formik.errors.email && formik.touched.email ? (\n                <Message message={formik.errors.email} severity=\"error\" />\n              ) : null}\n\n              {formik.errors.password && formik.touched.password ? (\n                <Message message={formik.errors.password} severity=\"error\" />\n              ) : null}\n            </Grid>\n\n            <form onSubmit={formik.handleSubmit} noValidate>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    label=\"email\"\n                    required\n                    name=\"email\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.email}\n                  />\n                </Grid>\n\n                <Grid item xs={12}>\n                  <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    type=\"password\"\n                    label=\"password\"\n                    required\n                    name=\"password\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.password}\n                  />\n                </Grid>\n\n                <Grid item xs={12} className=\"d-flex justify-content-center\">\n                  <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\n                    Take me in!\n                  </Button>\n                </Grid>\n              </Grid>\n            </form>\n          </Grid>\n        </Container>\n      </div>\n    );\n  };\n\n  return <>{FormContents()}</>;\n};\n"]},"metadata":{},"sourceType":"module"}