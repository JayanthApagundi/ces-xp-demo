{"ast":null,"code":"var _jsxFileName = \"/Users/akshayraichur/Projects/College-Projects/SD-Lab/ces-xp-demo/Web/frontend/src/Context/AuthContext.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Authenticate } from \"../Helpers/Auth\";\nexport const AuthContext = React.createContext();\nexport default (({\n  children\n}) => {\n  const [isLoaded, setIsLoaded] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({});\n  const access_token = JSON.stringify(localStorage.getItem(\"access_token\"));\n  const userStorage = JSON.stringify(localStorage.getItem(\"user\"));\n  useEffect(() => {\n    if (access_token == null && userStorage == null) {\n      Authenticate().then(data => {\n        setIsAuthenticated(data.data.isAuth);\n        setUser(data.data.user);\n      }).catch();\n    }\n  }, []);\n  return (\n    /*#__PURE__*/\n    //   or can also be used simply with <></Redirect>\n    React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }\n    }, isLoaded ? /*#__PURE__*/React.createElement(AuthContext.Provider, {\n      value: {\n        user,\n        setUser,\n        isAuthenticated,\n        setIsAuthenticated\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, children) : /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, \"Loading.....\"))\n  );\n});","map":{"version":3,"sources":["/Users/akshayraichur/Projects/College-Projects/SD-Lab/ces-xp-demo/Web/frontend/src/Context/AuthContext.js"],"names":["React","useState","useEffect","Redirect","Authenticate","AuthContext","createContext","children","isLoaded","setIsLoaded","isAuthenticated","setIsAuthenticated","user","setUser","access_token","JSON","stringify","localStorage","getItem","userStorage","then","data","isAuth","catch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,OAAO,MAAMC,WAAW,GAAGL,KAAK,CAACM,aAAN,EAApB;AAEP,gBAAe,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC/B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMa,YAAY,GAAGC,IAAI,CAACC,SAAL,CAAeC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAf,CAArB;AACA,QAAMC,WAAW,GAAGJ,IAAI,CAACC,SAAL,CAAeC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAf,CAApB;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,YAAY,IAAI,IAAhB,IAAwBK,WAAW,IAAI,IAA3C,EAAiD;AAC/Cf,MAAAA,YAAY,GAAGgB,IAAf,CAAqBC,IAAD,IAAU;AAC5BV,QAAAA,kBAAkB,CAACU,IAAI,CAACA,IAAL,CAAUC,MAAX,CAAlB;AACAT,QAAAA,OAAO,CAACQ,IAAI,CAACA,IAAL,CAAUT,IAAX,CAAP;AACD,OAHD,EAGGW,KAHH;AAID;AACF,GAPQ,EAON,EAPM,CAAT;AASA;AAAA;AACE;AACA,wBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGf,QAAQ,gBAEL,oBAAC,WAAD,CAAa,QAAb;AACE,MAAA,KAAK,EAAE;AAAEI,QAAAA,IAAF;AAAQC,QAAAA,OAAR;AAAiBH,QAAAA,eAAjB;AAAkCC,QAAAA;AAAlC,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGJ,QAHH,CAFK,gBASL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVN;AAFF;AAgBD,CAjCD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Authenticate } from \"../Helpers/Auth\";\n\nexport const AuthContext = React.createContext();\n\nexport default ({ children }) => {\n  const [isLoaded, setIsLoaded] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({});\n\n  const access_token = JSON.stringify(localStorage.getItem(\"access_token\"));\n  const userStorage = JSON.stringify(localStorage.getItem(\"user\"));\n\n  useEffect(() => {\n    if (access_token == null && userStorage == null) {\n      Authenticate().then((data) => {\n        setIsAuthenticated(data.data.isAuth);\n        setUser(data.data.user);\n      }).catch();\n    }\n  }, []);\n\n  return (\n    //   or can also be used simply with <></Redirect>\n    <React.Fragment>\n      {isLoaded\n        ? (\n          <AuthContext.Provider\n            value={{ user, setUser, isAuthenticated, setIsAuthenticated }}\n          >\n            {children}\n          </AuthContext.Provider>\n        )\n        : (\n          <h1>Loading.....</h1>\n        )}\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}