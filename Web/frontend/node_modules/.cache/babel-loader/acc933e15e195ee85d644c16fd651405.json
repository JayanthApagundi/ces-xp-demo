{"ast":null,"code":"var _jsxFileName = \"/Users/akshayraichur/Projects/College-Projects/SD-Lab/ces-xp-demo/Web/frontend/src/Screens/Register/Register.jsx\";\nimport React from \"react\";\nimport { Container, Grid, Typography, TextField, Button } from \"@material-ui/core\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { register } from \"../../Helpers/Auth\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }\n  }));\n}\n\nconst Message = props => {\n  return /*#__PURE__*/React.createElement(Snackbar, {\n    open: true,\n    autoHideDuration: 6000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: props.severity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, props.message));\n};\n\nconst validationSchema = () => {\n  return Yup.object({\n    name: Yup.string().min(3, \"You cant have a name with only 2 chars\").trim().required(\"Name Field is required!\"),\n    email: Yup.string().required(\"Email is required\").email(\"Please enter your email correctly\"),\n    password: Yup.string().min(3, \"Minimum of 3 Characters is required\").required(\"Dont skip your password\"),\n    phoneNumber: Yup.number().min(9, \"Please enter a valid number\"),\n    address: Yup.string().required(\"You dont have an address?\")\n  });\n};\n\nexport const Register = () => {\n  const [img, setImg] = React.useState(null);\n  const [success, setSuccess] = React.useState(false);\n  const [error, setError] = React.useState(false);\n  const history = useHistory();\n\n  const handleImageChange = e => {\n    setImg(e.target.files[0]);\n  };\n\n  const onSubmit = values => {\n    console.log(values);\n    const formData = new FormData();\n    formData.append(\"name\", values.name);\n    formData.append(\"email\", values.email);\n    formData.append(\"address\", values.address);\n    formData.append(\"password\", values.password);\n    formData.append(\"phoneNumber\", values.phoneNumber);\n    formData.append(\"profilePic\", img);\n    register(formData).then(data => {\n      if (data.err) {\n        setError(data.err);\n      }\n\n      setSuccess(true);\n      history.push(\"/signin\");\n    }).catch(err => console.log(err)); //catch should be handled propely not this way!\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"akshay raichur\",\n      email: \"aa@g.com\",\n      address: \"belgaum\",\n      password: \"1234567890\",\n      phoneNumber: \"1234567890\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: onSubmit\n  });\n\n  const FormContents = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: \"d-flex justify-content-center my-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        alignItems: \"center\",\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(AddCircleIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    })), \" \", /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      component: \"h4\",\n      className: \"pl-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, \"Register!\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, formik.errors.name && formik.touched.name ? /*#__PURE__*/React.createElement(Message, {\n      message: formik.errors.name,\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }) : null, formik.errors.email && formik.touched.email ? /*#__PURE__*/React.createElement(Message, {\n      message: formik.errors.email,\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }) : null, formik.errors.address && formik.touched.address ? /*#__PURE__*/React.createElement(Message, {\n      message: formik.errors.address,\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }) : null, formik.errors.password && formik.touched.password ? /*#__PURE__*/React.createElement(Message, {\n      message: formik.errors.password,\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }) : null, formik.errors.phoneNumber && formik.touched.phoneNumber ? /*#__PURE__*/React.createElement(Message, {\n      message: formik.errors.phoneNumber,\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }) : null), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: formik.handleSubmit,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      label: \"Name\",\n      required: true,\n      name: \"name\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      label: \"email\",\n      required: true,\n      name: \"email\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      label: \"Address\",\n      required: true,\n      name: \"address\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      type: \"password\",\n      label: \"password\",\n      required: true,\n      name: \"password\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      required: true,\n      name: \"phoneNumber\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.phoneNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 19\n      }\n    }, \"Choose the best photo you have :\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      name: \"profilePic\",\n      id: \"profilePic\",\n      label: \"profilePic\",\n      onChange: e => handleImageChange(e),\n      accept: \"image/png, image/jpeg, image/jpg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: \"d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 19\n      }\n    }, \"Register!\")))))));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, FormContents());\n};","map":{"version":3,"sources":["/Users/akshayraichur/Projects/College-Projects/SD-Lab/ces-xp-demo/Web/frontend/src/Screens/Register/Register.jsx"],"names":["React","Container","Grid","Typography","TextField","Button","AddCircleIcon","useFormik","Yup","Snackbar","MuiAlert","register","useHistory","Alert","props","Message","severity","message","validationSchema","object","name","string","min","trim","required","email","password","phoneNumber","number","address","Register","img","setImg","useState","success","setSuccess","error","setError","history","handleImageChange","e","target","files","onSubmit","values","console","log","formData","FormData","append","then","data","err","push","catch","formik","initialValues","FormContents","alignItems","display","errors","touched","handleSubmit","handleChange","handleBlur"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Container,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { register } from \"../../Helpers/Auth\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Message = (props) => {\n  return (\n    <Snackbar open={true} autoHideDuration={6000}>\n      <Alert severity={props.severity}>{props.message}</Alert>\n    </Snackbar>\n  );\n};\n\nconst validationSchema = () => {\n  return Yup.object({\n    name: Yup.string()\n      .min(3, \"You cant have a name with only 2 chars\")\n      .trim()\n      .required(\"Name Field is required!\"),\n    email: Yup.string()\n      .required(\"Email is required\")\n      .email(\"Please enter your email correctly\"),\n    password: Yup.string()\n      .min(3, \"Minimum of 3 Characters is required\")\n      .required(\"Dont skip your password\"),\n    phoneNumber: Yup.number().min(9, \"Please enter a valid number\"),\n    address: Yup.string().required(\"You dont have an address?\"),\n  });\n};\n\nexport const Register = () => {\n  const [img, setImg] = React.useState(null);\n  const [success, setSuccess] = React.useState(false);\n  const [error, setError] = React.useState(false);\n  const history = useHistory();\n\n  const handleImageChange = (e) => {\n    setImg(e.target.files[0]);\n  };\n\n  const onSubmit = (values) => {\n    console.log(values);\n    const formData = new FormData();\n    formData.append(\"name\", values.name);\n    formData.append(\"email\", values.email);\n    formData.append(\"address\", values.address);\n    formData.append(\"password\", values.password);\n    formData.append(\"phoneNumber\", values.phoneNumber);\n    formData.append(\"profilePic\", img);\n\n    register(formData)\n      .then((data) => {\n        if (data.err) {\n          setError(data.err);\n        }\n        setSuccess(true);\n        history.push(\"/signin\");\n      })\n      .catch((err) => console.log(err)); //catch should be handled propely not this way!\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"akshay raichur\",\n      email: \"aa@g.com\",\n      address: \"belgaum\",\n      password: \"1234567890\",\n      phoneNumber: \"1234567890\",\n    },\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n  });\n\n  const FormContents = () => {\n    return (\n      <div>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <Grid container spacing={2}>\n            <Grid item xs={12} className=\"d-flex justify-content-center my-5\">\n              <div style={{ alignItems: \"center\", display: \"flex\" }}>\n                <AddCircleIcon />\n              </div>{\" \"}\n              <Typography variant=\"h4\" component=\"h4\" className=\"pl-2\">\n                Register!\n              </Typography>\n            </Grid>\n\n            <Grid item xs={12}>\n              {formik.errors.name && formik.touched.name ? (\n                <Message message={formik.errors.name} severity=\"error\" />\n              ) : null}\n\n              {formik.errors.email && formik.touched.email ? (\n                <Message message={formik.errors.email} severity=\"error\" />\n              ) : null}\n\n              {formik.errors.address && formik.touched.address ? (\n                <Message message={formik.errors.address} severity=\"error\" />\n              ) : null}\n\n              {formik.errors.password && formik.touched.password ? (\n                <Message message={formik.errors.password} severity=\"error\" />\n              ) : null}\n\n              {formik.errors.phoneNumber && formik.touched.phoneNumber ? (\n                <Message message={formik.errors.phoneNumber} severity=\"error\" />\n              ) : null}\n            </Grid>\n\n            <form onSubmit={formik.handleSubmit} noValidate>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    label=\"Name\"\n                    required\n                    name=\"name\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.name}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    label=\"email\"\n                    required\n                    name=\"email\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.email}\n                  />\n                </Grid>\n\n                <Grid item xs={12}>\n                  <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    label=\"Address\"\n                    required\n                    name=\"address\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.address}\n                  />\n                </Grid>\n\n                <Grid item xs={12}>\n                  <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    type=\"password\"\n                    label=\"password\"\n                    required\n                    name=\"password\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.password}\n                  />\n                </Grid>\n\n                <Grid item xs={12}>\n                  <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    label=\"Phone Number\"\n                    required\n                    name=\"phoneNumber\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.phoneNumber}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography>Choose the best photo you have :</Typography>\n                  <input\n                    type=\"file\"\n                    name=\"profilePic\"\n                    id=\"profilePic\"\n                    label=\"profilePic\"\n                    onChange={(e) => handleImageChange(e)}\n                    accept=\"image/png, image/jpeg, image/jpg\"\n                  />\n                </Grid>\n                <Grid item xs={12} className=\"d-flex justify-content-center\">\n                  <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\n                    Register!\n                  </Button>\n                </Grid>\n              </Grid>\n            </form>\n          </Grid>\n        </Container>\n      </div>\n    );\n  };\n\n  return <>{FormContents()}</>;\n};\n"]},"metadata":{},"sourceType":"module"}